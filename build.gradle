import java.nio.file.Files
import java.nio.file.StandardCopyOption
import java.nio.file.attribute.PosixFilePermission

buildscript {
    ext.kotlin_version = '1.2.10'
    ext.korio_version = '0.18.0'

    repositories {
        mavenLocal()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

group 'com.soywiz'
version '0.1.0'

apply plugin: 'kotlin'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'signing'

repositories {
    mavenCentral()
}
dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "com.soywiz:korio:0.18.0"
    compile "com.soywiz:korim:0.18.0"
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
kotlin {
    experimental {
        coroutines "enable"
    }
}

task fatJarCore(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Kaifu2x',
                'Main-Class': 'com.soywiz.kaifu2x.Kaifu2xCli'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task fatJarLauncher() {
    doLast {
        File launcherFile = new File(rootProject.buildDir, "libs/kaifu2x")
        launcherFile.write("java -jar \$0-all-${version}.jar \$*")
        Files.setPosixFilePermissions(launcherFile.toPath(), Files.getPosixFilePermissions(launcherFile.toPath()) + [PosixFilePermission.OWNER_EXECUTE, PosixFilePermission.GROUP_EXECUTE, PosixFilePermission.OTHERS_EXECUTE].toSet())
    }
}

task fatJar(dependsOn: [fatJarCore, fatJarLauncher]) {
}

task installCli(dependsOn: fatJar) {
    doLast {
        Files.copy(new File(rootProject.buildDir, "libs/kaifu2x").toPath(), new File("/usr/local/bin/kaifu2x").toPath(), StandardCopyOption.REPLACE_EXISTING, StandardCopyOption.COPY_ATTRIBUTES)
        Files.copy(new File(rootProject.buildDir, "libs/kaifu2x-all-${version}.jar").toPath(), new File("/usr/local/bin/kaifu2x-all-${version}.jar").toPath(), StandardCopyOption.REPLACE_EXISTING, StandardCopyOption.COPY_ATTRIBUTES)
    }
}

task javadoc2(type: Javadoc) {
    failOnError = false
}

task javadocJar(type: Jar, dependsOn: javadoc2) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

// gradle uploadArchives
if (project.hasProperty('sonatypeUsername')) {
    signing {
        sign configurations.archives
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: project.sonatypeUsername, password: project.sonatypePassword)
                }

                pom.project {
                    name "${project.name}"
                    packaging 'jar'
                    description 'Port of waifu2x to pure kotlin. Anime-style upscaler and noise reductor based on convolutional neural networks using coffee trained models'
                    url 'https://github.com/soywiz/kaifu2x/'
                    inceptionYear '2017'

                    scm {
                        url 'scm:git@github.com:soywiz/kaifu2x.git'
                        connection 'scm:git@github.com:soywiz/kaifu2x.git'
                        developerConnection 'scm:git@github.com:soywiz/kaifu2x.git'
                    }

                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }

                    developers {
                        developer {
                            id 'soywiz'
                            name 'Carlos Ballesteros Velasco'
                        }
                    }
                }
            }
        }
    }
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            groupId project.group
            artifactId project.name
            version "$project.version"
        }
    }
}

task deploy(dependsOn: ['install', 'uploadArchives']) {
}
